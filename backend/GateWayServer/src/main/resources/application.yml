server:
  port: 8000

eureka:
  client:
    # true?? eureka 8761???? ?????? ??
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://j6c203.p.ssafy.io:8761/eureka

spring:
  application:
    name: gateway-server
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allow-credentials: true   #추가
            allowedHeaders:
              - x-requested-with
              - authorization
              - content-type
              - credential
              - X-AUTH-TOKEN
              - X-CSRF-TOKEN
            allowedMethods:
              - POST
              - GET
              - PUT
              - OPTIONS
              - DELETE

      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global filter
            preLogger: true
            postLogger: true
      routes:
        - id: auth-server
          # ??? localhost:8081? ?? lb? ?? eureka ????? ????? ????? eureka? ?????? ??
          uri: lb://AUTH-SERVER
          predicates:
            - Path=/**
          filters:
            #            - AddRequestHeader=auth-request, auth-request-header2
            #            - AddResponseHeader=auth-response, auth-response-header2
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Spring Cloud Gateway Logging filter
                preLogger: true
                postLogger: true
        - id: escape-server
          uri: lb://ESCAPE-SERVER
          predicates:
            - Path=/**
          filters:
            #            - AddRequestHeader=api-request, api-request-header2
            #            - AddResponseHeader=api-response, api-response-header2
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Spring Cloud Gateway Logging filter
                preLogger: true
                postLogger: true
        - id: analysis-server
            uri: lb://ANALYSIS-SERVER
            predicates:
              - Path=/**
            filters:
              #            - AddRequestHeader=api-request, api-request-header2
              #            - AddResponseHeader=api-response, api-response-header2
              - name: CustomFilter
              - name: LoggingFilter
                args:
                  baseMessage: Spring Cloud Gateway Logging filter
                  preLogger: true
                  postLogger: true