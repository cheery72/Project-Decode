server:
  port: 8000

eureka:
  client:
    # true?? eureka 8761???? ?????? ??
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://j6c203.p.ssafy.io:8761/eureka

spring:
  application:
    name: gateway-server
  cloud:
    gateway:
#      globalcors:
#        corsConfigurations:
#          '[/**]':
##            allowedOrigins: "http://localhost:3000"
#            allowedOrigins: "https://j6c203.p.ssafy.io"
#            allow-credentials: true   #추가
#            allowedHeaders:
#              - x-requested-with
#              - authorization
#              - content-type
#              - credential
#              - X-AUTH-TOKEN
#              - X-CSRF-TOKEN
#            allowedMethods:
#              - POST
#              - GET
#              - PUT
#              - OPTIONS
#              - DELETE
#
#      default-filters:
#        - name: GlobalFilter
#          args:
#            baseMessage: Spring Cloud Gateway Global filter
#            preLogger: true
#            postLogger: true
      routes:
        - id: auth-server
          # 포워딩 주소
          uri: http://j6c203.p.ssafy.io:8081/
          # 조건절
          predicates:
            - Path=/api/auth-server/**
          filters:
            #            - AddRequestHeader=auth-request, auth-request-header2
            #            - AddResponseHeader=auth-response, auth-response-header2
            - RewritePath=/api/auth-server/(?<path>.*),/$\{path}
#            - name: AuthorizationHeaderFilter
#            - name: LoggingFilter
#              args:
#                baseMessage: Spring Cloud Gateway Logging filter
#                preLogger: true
#                postLogger: true
        - id: escape-server
          uri: http://j6c203.p.ssafy.io:8082/
          predicates:
            - Path=/api/escape-server/**
          filters:
            - RewritePath=/api/escape-server/(?<path>.*),/$\{path}
            #            - AddRequestHeader=api-request, api-request-header2
            #            - AddResponseHeader=api-response, api-response-header2
            - name: AuthorizationHeaderFilter
            - name: LoggingFilter
              args:
                baseMessage: Spring Cloud Gateway Logging filter
                preLogger: true
                postLogger: true
        - id: analysis-server
          uri: http://j6c203.p.ssafy.io:8083/
          predicates:
            - Path=/api/analysis-server/**
          filters:
            - RewritePath=/api/analysis-server/(?<path>.*),/$\{path}
            #            - AddRequestHeader=api-request, api-request-header2
            #            - AddResponseHeader=api-response, api-response-header2
#            - name: AuthorizationHeaderFilter
#            - name: LoggingFilter
    #              args:
    #                baseMessage: Spring Cloud Gateway Logging filter
    #                preLogger: true
    #                postLogger: true